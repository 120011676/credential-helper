plugins {
    id 'org.springframework.boot' version '2.2.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'docker'
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation project(":credential-common")
    implementation 'com.google.code.gson:gson:latest.release'
    implementation 'com.github.120011676:ladybird-spring-boot-web-helper:latest.release'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}

buildscript {
    dependencies {
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}

docker {
    baseImage "openjdk:13-alpine"
    maintainer 'Say.li "120011676@qq.com"'
    useApi true
    hostUrl 'https://docker.com'
    apiUsername docker_username
    apiPassword docker_password
    apiEmail '120011676@qq.com'
}

task javaDocker(type: Docker) {
    applicationName = 'credential-server'
    tagVersion = 'latest'
    setEnvironment 'TZ' 'Asia/Shanghai'
    runCommand 'apk --update add tzdata && ln -sf /usr/share/zoneinfo/${TZ} /etc/localtime && echo ${TZ} > /etc/timezone'
    switchUser 'credential'
    workingDir '/opt'
    setEnvironment 'PROJECT_JAR_NAME' 'credential-server-0.0.1.jar'
    addFile 'build/libs/$PROJECT_JAR_NAME' '.'
    exposePort 8080
    defaultCommand 'java -jar $PROJECT_JAR_NAME'
}